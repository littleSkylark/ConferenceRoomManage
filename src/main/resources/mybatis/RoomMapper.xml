<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lark.dao.mapper.RoomMapper">
  <resultMap id="BaseResultMap" type="com.lark.dao.pojo.Room">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="minNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="maxNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="beginTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="endTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, companyId, minNum, maxNum, name, beginTime, endTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (companyId, minNum, maxNum, 
      name, beginTime, endTime
      )
    values (#{companyId,jdbcType=INTEGER}, #{minNum,jdbcType=INTEGER}, #{maxNum,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{beginTime,jdbcType=INTEGER}, #{endTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        companyId,
      </if>
      <if test="minNum != null">
        minNum,
      </if>
      <if test="maxNum != null">
        maxNum,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="beginTime != null">
        beginTime,
      </if>
      <if test="endTime != null">
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="minNum != null">
        #{minNum,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null">
        #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lark.dao.pojo.Room">
    update room
    <set>
      <if test="companyId != null">
        companyId = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="minNum != null">
        minNum = #{minNum,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null">
        maxNum = #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        beginTime = #{beginTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        endTime = #{endTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lark.dao.pojo.Room">
    update room
    set companyId = #{companyId,jdbcType=INTEGER},
      minNum = #{minNum,jdbcType=INTEGER},
      maxNum = #{maxNum,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      beginTime = #{beginTime,jdbcType=INTEGER},
      endTime = #{endTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lark.dao.pojo.Room">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="minNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="maxNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="beginTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="endTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, companyId, minNum, maxNum, name, beginTime, endTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (companyId, minNum, maxNum, 
      name, beginTime, endTime
      )
    values (#{companyid,jdbcType=INTEGER}, #{minnum,jdbcType=INTEGER}, #{maxnum,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{begintime,jdbcType=INTEGER}, #{endtime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyid != null">
        companyId,
      </if>
      <if test="minnum != null">
        minNum,
      </if>
      <if test="maxnum != null">
        maxNum,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="begintime != null">
        beginTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="minnum != null">
        #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null">
        #{maxnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lark.dao.pojo.Room">
    update room
    <set>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="minnum != null">
        minNum = #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null">
        maxNum = #{maxnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        beginTime = #{begintime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lark.dao.pojo.Room">
    update room
    set companyId = #{companyid,jdbcType=INTEGER},
      minNum = #{minnum,jdbcType=INTEGER},
      maxNum = #{maxnum,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      beginTime = #{begintime,jdbcType=INTEGER},
      endTime = #{endtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lark.dao.pojo.Room">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="minNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="maxNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="beginTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="endTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, companyId, minNum, maxNum, name, beginTime, endTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (companyId, minNum, maxNum, 
      name, beginTime, endTime
      )
    values (#{companyid,jdbcType=INTEGER}, #{minnum,jdbcType=INTEGER}, #{maxnum,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{begintime,jdbcType=INTEGER}, #{endtime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyid != null">
        companyId,
      </if>
      <if test="minnum != null">
        minNum,
      </if>
      <if test="maxnum != null">
        maxNum,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="begintime != null">
        beginTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="minnum != null">
        #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null">
        #{maxnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lark.dao.pojo.Room">
    update room
    <set>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="minnum != null">
        minNum = #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null">
        maxNum = #{maxnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        beginTime = #{begintime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lark.dao.pojo.Room">
    update room
    set companyId = #{companyid,jdbcType=INTEGER},
      minNum = #{minnum,jdbcType=INTEGER},
      maxNum = #{maxnum,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      beginTime = #{begintime,jdbcType=INTEGER},
      endTime = #{endtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.lark.dao.pojo.Room">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="minNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="maxNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="beginTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="endTime" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, companyId, minNum, maxNum, name, beginTime, endTime
  </sql>
  <select id="selectByExample" parameterType="com.lark.dao.pojo.RoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lark.dao.pojo.RoomExample">
    delete from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (companyId, minNum, maxNum, 
      name, beginTime, endTime
      )
    values (#{companyid,jdbcType=INTEGER}, #{minnum,jdbcType=INTEGER}, #{maxnum,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{begintime,jdbcType=INTEGER}, #{endtime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lark.dao.pojo.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyid != null">
        companyId,
      </if>
      <if test="minnum != null">
        minNum,
      </if>
      <if test="maxnum != null">
        maxNum,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="begintime != null">
        beginTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="minnum != null">
        #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null">
        #{maxnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lark.dao.pojo.RoomExample" resultType="java.lang.Long">
    select count(*) from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update room
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null">
        companyId = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.minnum != null">
        minNum = #{record.minnum,jdbcType=INTEGER},
      </if>
      <if test="record.maxnum != null">
        maxNum = #{record.maxnum,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.begintime != null">
        beginTime = #{record.begintime,jdbcType=INTEGER},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update room
    set id = #{record.id,jdbcType=INTEGER},
      companyId = #{record.companyid,jdbcType=INTEGER},
      minNum = #{record.minnum,jdbcType=INTEGER},
      maxNum = #{record.maxnum,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      beginTime = #{record.begintime,jdbcType=INTEGER},
      endTime = #{record.endtime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lark.dao.pojo.Room">
    update room
    <set>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="minnum != null">
        minNum = #{minnum,jdbcType=INTEGER},
      </if>
      <if test="maxnum != null">
        maxNum = #{maxnum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null">
        beginTime = #{begintime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lark.dao.pojo.Room">
    update room
    set companyId = #{companyid,jdbcType=INTEGER},
      minNum = #{minnum,jdbcType=INTEGER},
      maxNum = #{maxnum,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      beginTime = #{begintime,jdbcType=INTEGER},
      endTime = #{endtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>